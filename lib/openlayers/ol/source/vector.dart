// Generated by dartify

import 'dart:js_interop';

@JS('ol.source.Vector')
@staticInterop
class Vector {
  external factory Vector(JSObject? opt_options);
}

extension VectorExtension on Vector {
  external void addFeature(JSObject feature);
  external void addFeatures(JSArray<JSObject> features);
  external void clear(JSBoolean? opt_fast);
  external JSObject forEachFeature(JSObject callback, JSObject? opt_this);
  external JSObject forEachFeatureInExtent(JSObject extent, JSObject callback, JSObject? opt_this);
  external JSObject forEachFeatureIntersectingExtent(JSObject extent, JSObject callback, JSObject? opt_this);
  external JSObject getFeaturesCollection();
  external JSArray<JSObject> getFeatures();
  external JSArray<JSObject> getFeaturesAtCoordinate(JSObject coordinate);
  external JSArray<JSObject> getFeaturesInExtent(JSObject extent);
  external JSObject getClosestFeatureToCoordinate(JSObject coordinate, JSObject? opt_filter);
  external JSObject getExtent();
  external JSObject getFeatureById(JSObject id);
  external JSObject getFormat();
  external JSObject getUrl();
  external void removeFeature(JSObject feature);
}

