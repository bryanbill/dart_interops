// Generated by dartify

import 'dart:js_interop';

@JS('ol.Map')
@staticInterop
class Map {
  external factory Map(JSObject? opt_options);
}

extension MapExtension on Map {
  external void addControl(JSObject control);
  external void addInteraction(JSObject interaction);
  external void addLayer(JSObject layer);
  external void addOverlay(JSObject overlay);
  external void beforeRender(JSObject var_args);
  external JSObject forEachFeatureAtPixel(JSObject pixel, JSObject callback, JSObject? opt_layerFilter);
  external JSObject forEachLayerAtPixel(JSObject pixel, JSObject callback, JSObject? opt_this, JSObject? opt_layerFilter, JSObject? opt_this2);
  external JSBoolean hasFeatureAtPixel(JSObject pixel, JSObject? opt_layerFilter);
  external JSObject getEventCoordinate(JSObject event);
  external JSObject getEventPixel(JSObject event);
  external JSObject getTarget();
  external JSObject getTargetElement();
  external JSObject getCoordinateFromPixel(JSObject pixel);
  external JSObject getControls();
  external JSObject getOverlays();
  external JSObject getOverlayById(JSObject id);
  external JSObject getInteractions();
  external JSObject getLayerGroup();
  external JSObject getLayers();
  external JSObject getPixelFromCoordinate(JSObject coordinate);
  external JSObject getSize();
  external JSObject getView();
  external JSObject getViewport();
  external void renderSync();
  external void render();
  external JSObject removeControl(JSObject control);
  external JSObject removeInteraction(JSObject interaction);
  external JSObject removeLayer(JSObject layer);
  external JSObject removeOverlay(JSObject overlay);
  external void setLayerGroup(JSObject layerGroup);
  external void setSize(JSObject size);
  external void setTarget(JSObject target);
  external void setView(JSObject view);
  external void updateSize();
}

